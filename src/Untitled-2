#include <Adafruit_NeoPixel.h>
#define PIN 6
#define NUM_LEDS 300
// Parameter 1 = number of pixels in strip
// Parameter 2 = pin number (most are valid)
// Parameter 3 = pixel type flags, add together as needed:
//   NEO_KHZ800  800 KHz bitstream (most NeoPixel products w/WS2812 LEDs)
//   NEO_KHZ400  400 KHz (classic 'v1' (not v2) FLORA pixels, WS2811 drivers)
//   NEO_GRB     Pixels are wired for GRB bitstream (most NeoPixel products)
//   NEO_RGB     Pixels are wired for RGB bitstream (v1 FLORA pixels, not v2)
Adafruit_NeoPixel strip = Adafruit_NeoPixel(NUM_LEDS, PIN, NEO_GRB + NEO_KHZ800);
const int brightnessButtonPin = 2;
const int blinkButtonPin = A1;
const int knobPin = A0;
int buttonCount = 0;
int val;


void setPixel(int Pixel, byte red, byte green, byte blue)
{
  strip.setPixelColor(Pixel, strip.Color(red, green, blue));
}


void fillStrip(int start, int count, int speedDelay)
{
  for (int i = start; i < count; i++)
  {
    setPixel(i, 255,20,147);

    strip.show();
  }
    delay(speedDelay);

}

void unfillStrip(int start, int count, int speedDelay)
{
  for (int i = start; i >= (start - count); i--)
  {
    setPixel(i, 0, 0, 0);
    strip.show();
  }

  delay(speedDelay);

}

void blink() {
  val = analogRead(blinkButtonPin); 
  val = map(val, 0, 1023, 1, 200);
  strip.setBrightness(1);
  strip.show();
  Serial.print(val);
  delay(val);

  strip.setBrightness(100);
  strip.show();
  delay(val);

}

void sendOne(int start, int count, int speedDelay)
{
  for (int i = start; i <= count; i++)
  {
    strip.setBrightness(64);
    setPixel(i, 255, 164, 26);
    setPixel(i - 1, 0, 0, 0);
    strip.show();
    delay(speedDelay);


  }

  strip.clear();
}

void Clear(byte red, byte green, byte blue)
{
  for (int i = 0; i < 300; i++)
  {
    setPixel(0, red, green, blue);
  }
}

void listenButton()
{
  char buttonState = digitalRead(brightnessButtonPin);

  if (buttonState == HIGH)
  {
    strip.fill(strip.Color(255, 0, 255), 0, 50);

    buttonCount++;
    if(buttonCount > 3) {
      buttonCount = 1;
    }

    Serial.print(buttonCount);

    switch (buttonCount)
    {
    case 1:

      fillStrip(0, 300, 100);
      break;
    case 2:
      unfillStrip(300, 300, 100);
      break;
    case 3:
      sendOne(0, 300, 5);
      break;

    default:
      break;
    }
  }
}

void controlBrightness() {
    val = analogRead(knobPin); 
    val = map(val, 0, 1023, 1, 200);
    strip.setBrightness(val);
    strip.show();
    delay(10);
}

void loop()
{
  listenButton();
  controlBrightness();
  // blink();
}

void setup()
{
  strip.begin();
  strip.setBrightness(1);
  strip.show();
  Serial.begin(9600);
  
  pinMode(brightnessButtonPin, INPUT);
  attachInterrupt(digitalPinToInterrupt(blinkButtonPin), blink, CHANGE);
  pinMode(knobPin, INPUT);
}